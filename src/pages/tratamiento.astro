---
import LayoutCommon from "../app/LayoutCommon.astro";
import tratamientos from '../data/tratamientos.json';
---

<LayoutCommon>
  <div class="min-h-screen bg-gradient-to-r from-slate-100 to-slate-200 p-4 text-slate-800 dark:from-slate-900 dark:to-slate-800 dark:text-slate-100 lg:p-16">
    <div class="mx-auto max-w-6xl">
      <div class="mb-6 flex items-center justify-between">
        <div class="flex items-center gap-4">
          <a href="/" class="text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300">← Volver al inicio</a>
          <h1 class="text-2xl font-bold">Tratamientos</h1>
        </div>
        <a href="/nuevo-tratamiento" class="rounded-lg bg-green-600 px-4 py-2 text-sm font-medium text-white hover:bg-green-700 focus:ring-2 focus:ring-green-300 dark:focus:ring-green-900 transition-colors duration-200">Agregar Tratamiento</a>
      </div>

      <div class="mb-6">
        <label for="searchInput" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Buscar Tratamiento</label>
        <div class="relative mt-1">
          <input type="text" id="searchInput" placeholder="Buscar por nombre o descripción..." class="w-full rounded-lg border border-gray-300 p-2 pl-10 dark:border-gray-600 dark:bg-gray-700 dark:text-gray-100">
          <span class="absolute left-3 top-2.5 text-gray-400">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" stroke="currentColor" stroke-width="2">
              <circle cx="11" cy="11" r="8"/>
              <line x1="21" y1="21" x2="16.65" y2="16.65"/>
            </svg>
          </span>
        </div>
      </div>
      
      <div class="overflow-x-auto rounded-lg bg-white shadow-xl dark:bg-gray-800">
        <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
          <thead class="bg-gray-100 dark:bg-gray-700">
            <tr>
              <th class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500 dark:text-gray-300">ID</th>
              <th class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500 dark:text-gray-300">Nombre</th>
              <th class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500 dark:text-gray-300">Descripción</th>
              <th class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500 dark:text-gray-300">Acciones</th>
            </tr>
          </thead>
          <tbody class="divide-y divide-gray-200 bg-white dark:divide-gray-700 dark:bg-gray-800"></tbody>
        </table>
      </div>
    </div>
  </div>
</LayoutCommon>

<script>
  const BASE_URL = 'http://localhost:5000/api/tratamientos';
  
  async function actualizarTabla() {
    const tbody = document.querySelector('tbody');
    if (!tbody) return;
  
    try {
      const response = await fetch(BASE_URL);
      if (!response.ok) throw new Error('Error al obtener tratamientos');
      
      const tratamientos = await response.json();
  
      tbody.innerHTML = tratamientos.map(tratamiento => `
        <tr class="hover:bg-gray-50 dark:hover:bg-gray-600">
          <td class="px-6 py-4 text-sm text-gray-900 dark:text-gray-100">${tratamiento._id}</td>
          <td class="px-6 py-4 text-sm text-gray-900 dark:text-gray-100">${tratamiento.nombre}</td>
          <td class="px-6 py-4 text-sm text-gray-900 dark:text-gray-100">${tratamiento.descripcion}</td>
          <td class="px-6 py-4 text-sm text-gray-900 dark:text-gray-100">
            <div class="flex space-x-2">
            <button
							data-id="${tratamiento._id}"
              class="edit-button p-2 text-blue-600 hover:text-blue-700 focus:outline-none"
              title="Editar"
            >
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"></path>
                <path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"></path>
              </svg>
            </button>
            <button
							data-id="${tratamiento._id}"
              class="delete-button p-2 text-red-600 hover:text-red-700 focus:outline-none"
              title="Eliminar"
            >
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M3 6h18"></path>
                <path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6"></path>
                <path d="M8 6V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path>
              </svg>
            </button>
          </div>
          </td>
        </tr>
      `).join('');
    } catch (error) {
      console.error('Error:', error);
    }
  }

	function handleEdit(id) {
  window.location.href = `/editar-tratamiento?id=${id}`;
}
  
  async function handleDelete(id) {
    if (!confirm('¿Está seguro que desea eliminar este tratamiento?')) return;
  
    try {
      const response = await fetch(`${BASE_URL}/deleteById/${id}`, { method: 'DELETE' });
      if (!response.ok) throw new Error('Error al eliminar');
      await actualizarTabla();
    } catch (error) {
      console.error('Error:', error);
      alert('Error al eliminar el tratamiento');
    }
  }
  
  document.addEventListener('DOMContentLoaded', () => {
    actualizarTabla();
    
    document.addEventListener('click', (e) => {
  if (e.target.matches('.edit-button')) {
    const id = e.target.dataset.id;
    handleEdit(id);
  }
    });
  
    document.getElementById('searchInput').addEventListener('input', (e) => {
      const searchTerm = e.target.value.toLowerCase();
      const rows = document.querySelectorAll('tbody tr');
      
      rows.forEach(row => {
        const text = row.textContent.toLowerCase();
        row.style.display = text.includes(searchTerm) ? '' : 'none';
      });
    });
  });
</script>
