---
/* eslint max-lines: 'off' */

import { asset } from '../lib/data.js';

import ColorModeSwitcher from '../components/ColorModeSwitcher.astro';
---

<nav
	class="fixed z-30 w-full bg-white border-b border-gray-200 dark:bg-gray-800 dark:border-gray-700"
>
	<div class="px-3 py-3 lg:px-5 lg:pl-3">
		<div class="flex items-center justify-between">
			<div class="flex items-center justify-start">
				<button
					id="toggleSidebarMobile"
					aria-expanded="true"
					aria-controls="sidebar"
					class="p-2 text-gray-600 rounded cursor-pointer lg:hidden hover:text-gray-900 hover:bg-gray-100 focus:bg-gray-100 dark:focus:bg-gray-700 focus:ring-2 focus:ring-gray-100 dark:focus:ring-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white"
				>
					<svg
						id="toggleSidebarMobileHamburger"
						class="w-6 h-6"
						fill="currentColor"
						viewBox="0 0 20 20"
						xmlns="http://www.w3.org/2000/svg"
						><path
							fill-rule="evenodd"
							d="M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h6a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z"
							clip-rule="evenodd"></path></svg
					>
					<svg
						id="toggleSidebarMobileClose"
						class="hidden w-6 h-6"
						fill="currentColor"
						viewBox="0 0 20 20"
						xmlns="http://www.w3.org/2000/svg"
						><path
							fill-rule="evenodd"
							d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
							clip-rule="evenodd"></path></svg
					>
				</button>
				<a href="/" class="flex ml-2 md:mr-24">
					<img
						src='/src/assets/logo.png'
						class="h-8 mr-3"
						alt="FlowBite Logo"
					/>
					<span
						class="self-center text-xl font-semibold sm:text-2xl whitespace-nowrap dark:text-white"
						>Consultorio Odontológico</span
					>
				</a>
			</div>

			<div class="flex items-center">
			
				<ColorModeSwitcher />

				<!-- Profile -->
				<div class="flex items-center ml-3">
					<div>
						<button
							type="button"
							class="flex text-sm bg-gray-800 rounded-full focus:ring-4 focus:ring-gray-300 dark:focus:ring-gray-600"
							id="user-menu-button-2"
							aria-expanded="false"
							data-dropdown-toggle="dropdown-2"
						>
							<span class="sr-only">Open user menu</span>
							<img
								class="w-8 h-8 rounded-full"
								src="https://flowbite.com/docs/images/people/profile-picture-5.jpg"
								alt="user photo"
							/>
						</button>
					</div>
					<!-- Dropdown menu -->
					<div
						class="z-50 hidden my-4 text-base list-none bg-white divide-y divide-gray-100 rounded shadow dark:bg-gray-700 dark:divide-gray-600"
						id="dropdown-2"
					>
						<div class="px-4 py-3" role="none">
							<p class="text-sm text-gray-900 dark:text-white" role="none" id="user-name">
								Cargando...
							</p>
							<p
								class="text-sm font-medium text-gray-900 truncate dark:text-gray-300"
								role="none"
								id="user-email"
							>
								Cargando...
							</p>
						</div>
						<ul class="py-1" role="none">
							<li>
								<a
									href="#"
									class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-600 dark:hover:text-white"
									id="logoutButton"
									role="menuitem">Cerrar Sesión</a
								>
							</li>
						</ul>
					</div>
				</div>
			</div>
		</div>
	</div>
</nav>


<script>
  const BASE_URL = 'https://consultorio-odontologico-backend-production-b1c8.up.railway.app/api/';
  
	async function cargarDatosUsuario() {
  try {
    const userId = localStorage.getItem('userId');
    const userRole = localStorage.getItem('userRole');
    
    console.log('ID de usuario:', userId);
    console.log('Rol de usuario:', userRole);
    
    if (!userId) {
      console.log('No hay usuario logueado');
      return;
    }
    
    // Determinar el endpoint según el rol
    let endpoint = '';
    if (userRole === 'odontologo') {
      endpoint = `${BASE_URL}/medico/findById/${userId}`;
    } else if (userRole === 'secretaria') {
      endpoint = `${BASE_URL}/secretaria/buscarId/${userId}`;
    } else {
      console.log('Rol no reconocido:', userRole);
      return;
    }
    
    console.log('Consultando endpoint:', endpoint);
    
    const response = await fetch(endpoint);
    console.log('Estado de la respuesta:', response.status);
    
    if (!response.ok) {
      const errorText = await response.text();
      console.error('Error response:', errorText);
      throw new Error(`Error al cargar datos del usuario (${response.status})`);
    }
    
    const data = await response.json();
    console.log('Datos recibidos:', data);
    
    // Si es médico, extraer de data.medico, si es secretaria, extraer de data.secretaria
    let user;
    if (userRole === 'odontologo') {
      user = data.medico; // Del controlador de médicos vemos que devuelve { medico: {...} }
    } else {
      user = data.secretaria; // Del controlador de secretarias vemos que devuelve { secretaria: {...} }
    }
    
    console.log('Datos procesados del usuario:', user);
    
    if (!user) {
      throw new Error('No se encontraron datos del usuario');
    }
    
    // Actualizar los elementos del DOM
    const nombreElement = document.querySelector('#user-name');
    const emailElement = document.querySelector('#user-email');
    
    if (nombreElement) {
      nombreElement.textContent = user.nombre || 'Nombre no disponible';
    }
    
    if (emailElement) {
      emailElement.textContent = user.email || 'Email no disponible';
    }
  } catch (error) {
    console.error('Error completo:', error);
    // Actualizar la UI para mostrar el error
    const nombreElement = document.querySelector('#user-name');
    const emailElement = document.querySelector('#user-email');
    
    if (nombreElement) {
      nombreElement.textContent = 'Error al cargar';
    }
    if (emailElement) {
      emailElement.textContent = 'Error al cargar';
    }
  }
}

  // Manejar el logout
  const logoutButton = document.getElementById('logoutButton');
  if (logoutButton) {
    logoutButton.addEventListener('click', (e) => {
      e.preventDefault();
      localStorage.removeItem('userId');
      localStorage.removeItem('userRole');
      window.location.href = '/login';
    });
  }

  // Cargar datos cuando el documento esté listo
  document.addEventListener('DOMContentLoaded', cargarDatosUsuario);
</script>
