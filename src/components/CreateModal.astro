---
// src/components/CreateModal.astro
import Button from './Button.astro';
---

<div id="createModal" class="fixed inset-0 flex items-center justify-center z-50 hidden">
  <div class="absolute inset-0 bg-black opacity-50"></div>
  <div class="relative bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6 w-1/3">
    <h2 class="text-lg font-bold text-gray-800 dark:text-gray-100 mb-4">
      Crear Nuevo Paciente
    </h2>
    <form id="createForm" class="space-y-4">
      <div class="mb-4">
        <label class="block text-sm font-medium text-gray-700 dark:text-gray-300">
          Nombre
        </label>
        <input 
          type="text" 
          name="name"
          required
          class="mt-1 block w-full border-gray-300 rounded-lg shadow-sm focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100" 
        />
      </div>
      <div class="mb-4">
        <label class="block text-sm font-medium text-gray-700 dark:text-gray-300">
          DNI
        </label>
        <input 
          type="text" 
          name="dni"
          required
          class="mt-1 block w-full border-gray-300 rounded-lg shadow-sm focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100" 
        />
      </div>
      <div class="mb-4">
        <label class="block text-sm font-medium text-gray-700 dark:text-gray-300">
          Tel√©fono
        </label>
        <input 
          type="text" 
          name="telefono"
          required
          class="mt-1 block w-full border-gray-300 rounded-lg shadow-sm focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100" 
        />
      </div>
      <div class="mb-4">
        <label class="block text-sm font-medium text-gray-700 dark:text-gray-300">
          Email
        </label>
        <input 
          type="email" 
          name="mail"
          required
          class="mt-1 block w-full border-gray-300 rounded-lg shadow-sm focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100" 
        />
      </div>
      <div class="flex justify-end space-x-4">
        <Button
          type="button"
          variant="secondary"
          class="close-create-modal"
        >
          Cancelar
        </Button>
        <Button
          type="submit"
          variant="primary"
          class="bg-green-600 hover:bg-green-700"
        >
          Crear
        </Button>
      </div>
    </form>
  </div>
</div>

<script>
  import { validatePatient } from '../utils/validators';
  import { showNotification } from '../utils/notifications';
  import type { Patient } from '../types/Patient';

  const createModal = document.getElementById('createModal');
  const createForm = document.getElementById('createForm') as HTMLFormElement;

  createForm?.addEventListener('submit', async (e) => {
    e.preventDefault();
    const form = e.target as HTMLFormElement;
    const submitButton = form.querySelector('button[type="submit"]') as HTMLButtonElement;
    const originalText = submitButton.textContent;

    try {
      submitButton.disabled = true;
      submitButton.textContent = 'Creando...';

      const formData = new FormData(form);
      const patient = {
        name: formData.get('name')?.toString().trim() || '',
        dni: formData.get('dni')?.toString().trim() || '',
        mail: formData.get('mail')?.toString().trim() || '',
        telefono: formData.get('telefono')?.toString().trim() || ''
      } as Patient;

      const errors = validatePatient(patient);
      if (errors.length > 0) {
        throw new Error(errors.join('\n'));
      }

      const response = await fetch('/api/createPatient', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(patient)
      });

      if (!response.ok) {
        throw new Error(`Error del servidor: ${response.status}`);
      }

      const result = await response.json();
      if (result.success) {
        showNotification('Paciente creado correctamente');
        createModal?.classList.add('hidden');
        window.location.reload();
      } else {
        throw new Error(result.message || 'Error al crear el paciente');
      }
    } catch (error) {
      if (error instanceof Error) {
        showNotification
